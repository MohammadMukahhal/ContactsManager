@page "/contact/{id}"
@inject ContactsManager.Data.IContactService ContactService;
@using ContactsManager.Data
@using Microsoft.EntityFrameworkCore
@using System.Data
@inject NavigationManager NavManager
@inject IJSRuntime JSRuntime
<h1>Edit Contact</h1>

<EditForm Model = "contact" OnSubmit = "@Submit">
    <div class="form-group">
        <label>ID</label>
        <input id="id" class="form-control" name="id" value="@contact.Id" readonly />
    </div>
    <div class="form-group">
        <label>First Name</label>
        <InputText id="firstName" class="form-control" name="firstName" @bind-Value="contact.FirstName"></InputText>
    </div>
        <div class="form-group">
        <label>Last Name</label>
        <InputText id="lastName" class="form-control" name="lastName" @bind-Value="contact.LastName"></InputText>
    </div>
        <div class="form-group">
        <label>Phone Number</label>
        <InputText id="phone" class="form-control" name="phone" @bind-Value="contact.Phone"></InputText>
    </div>
        <div class="form-group">
        <label>Birth Date</label>
        <InputDate id="dob" class="form-control" name="dob" @bind-Value="contact.BirthDate"></InputDate>
    </div>
    <br />
    <a @onclick = "(e=>Cancel())" role="button" class="btn btn-warning">Cancel</a>
    <button type="submit" class="alert-success btn-block"> Submit! </button>
</EditForm>

@code {
    [Parameter]
    public String Id { get; set; } = default!;
    [Inject] ContactDbContext contactContext { set; get; } = default!;
    private ContactsManager.Data.Contact contact = new ContactsManager.Data.Contact();

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Id) && (Id == "0"))
        {
            contact = new ContactsManager.Data.Contact();
        }
        else
        {
            contact = await contactContext.Contacts.FindAsync(Guid.Parse(Id));
        }
    }

    async void Submit()
    {
        if (contact.Id == Guid.Empty)
        {
            if (contact.FirstName == null && contact.LastName == null)
            {
                if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Must enter first or last name to save new contact!"))
                    return;
            }
            else
            {
                //ContactService.AddContact(contact);
                contactContext.Contacts.AddAsync(contact);
                contactContext.SaveChangesAsync();
            }
        }
        else
        {
            //ContactService.UpdateContact(contact);
            contactContext.Contacts.Update(contact);
            contactContext.SaveChangesAsync();
        }
        NavManager.NavigateTo("contacts");
    }

    private void Cancel()
    {
        NavManager.NavigateTo("contacts");
    }
}
