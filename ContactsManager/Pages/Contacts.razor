@page "/"
@page "/contacts"
@inject ContactsManager.Data.IContactService ContactService;
@inject IJSRuntime JSRuntime

<h1>All Contacts</h1>
<br />
<a class="btn-outline-primary" role="button" href="contact/0">Add Contact</a>
<table class="table">
  <thead class="thead-dark">
    <tr>
      <th scope="col">ID</th>
      <th scope="col">First Name</th>
      <th scope="col">Last Name</th>
      <th scope="col">Phone Number</th>
      <th scope="col">Birth Date</th>
    </tr>
  </thead>
  <tbody>
      @foreach(var contact in contacts){
        <tr>
            <td>@contact.Id</td>
            <td>@contact.FirstName</td>
            <td>@contact.LastName</td>
            <td>@contact.Phone</td>
            <td>@contact.BirthDate</td>
            <td><a class="btn btn-warning" href="contact/@contact.Id" role="button">Edit</a></td>
            <td><a @onclick = "(e=>delete(contact.Id))" role="button" class="btn btn-danger">Delete</a></td>
        </tr>
      }
   </tbody>
</table>

@code {
    private List<ContactsManager.Data.Contact> contacts = default!;
    protected override void OnInitialized()
    {
        contacts = ContactService.GetContacts();
    }

    async Task delete(Guid Id)
    {
        var oldContact = ContactService.GetContact(Id);
        if (!await JSRuntime.InvokeAsync<bool>("confirm", $"Are you sure you want to delete this contact? '{oldContact.FirstName + " " + oldContact.LastName}'?"))
            return;

        ContactService.DeleteContact(Id);
    }

}
